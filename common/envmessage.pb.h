// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envmessage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_envmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_envmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_envmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_envmessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_envmessage_2eproto;
namespace warehousesim {
class EnvSetupRequest;
class EnvSetupRequestDefaultTypeInternal;
extern EnvSetupRequestDefaultTypeInternal _EnvSetupRequest_default_instance_;
class EnvSetupResponse;
class EnvSetupResponseDefaultTypeInternal;
extern EnvSetupResponseDefaultTypeInternal _EnvSetupResponse_default_instance_;
}  // namespace warehousesim
PROTOBUF_NAMESPACE_OPEN
template<> ::warehousesim::EnvSetupRequest* Arena::CreateMaybeMessage<::warehousesim::EnvSetupRequest>(Arena*);
template<> ::warehousesim::EnvSetupResponse* Arena::CreateMaybeMessage<::warehousesim::EnvSetupResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace warehousesim {

enum EnvSetupRequestType : int {
  ATTACH = 1,
  CLEAR = 2,
  RETRIVE = 3
};
bool EnvSetupRequestType_IsValid(int value);
constexpr EnvSetupRequestType EnvSetupRequestType_MIN = ATTACH;
constexpr EnvSetupRequestType EnvSetupRequestType_MAX = RETRIVE;
constexpr int EnvSetupRequestType_ARRAYSIZE = EnvSetupRequestType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnvSetupRequestType_descriptor();
template<typename T>
inline const std::string& EnvSetupRequestType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EnvSetupRequestType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EnvSetupRequestType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EnvSetupRequestType_descriptor(), enum_t_value);
}
inline bool EnvSetupRequestType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EnvSetupRequestType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EnvSetupRequestType>(
    EnvSetupRequestType_descriptor(), name, value);
}
enum EnvSetupStatus : int {
  SUCCESS = 1,
  FAILED = 2
};
bool EnvSetupStatus_IsValid(int value);
constexpr EnvSetupStatus EnvSetupStatus_MIN = SUCCESS;
constexpr EnvSetupStatus EnvSetupStatus_MAX = FAILED;
constexpr int EnvSetupStatus_ARRAYSIZE = EnvSetupStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnvSetupStatus_descriptor();
template<typename T>
inline const std::string& EnvSetupStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EnvSetupStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EnvSetupStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EnvSetupStatus_descriptor(), enum_t_value);
}
inline bool EnvSetupStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EnvSetupStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EnvSetupStatus>(
    EnvSetupStatus_descriptor(), name, value);
}
// ===================================================================

class EnvSetupRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:warehousesim.EnvSetupRequest) */ {
 public:
  inline EnvSetupRequest() : EnvSetupRequest(nullptr) {};
  virtual ~EnvSetupRequest();

  EnvSetupRequest(const EnvSetupRequest& from);
  EnvSetupRequest(EnvSetupRequest&& from) noexcept
    : EnvSetupRequest() {
    *this = ::std::move(from);
  }

  inline EnvSetupRequest& operator=(const EnvSetupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnvSetupRequest& operator=(EnvSetupRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EnvSetupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnvSetupRequest* internal_default_instance() {
    return reinterpret_cast<const EnvSetupRequest*>(
               &_EnvSetupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EnvSetupRequest& a, EnvSetupRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EnvSetupRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnvSetupRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EnvSetupRequest* New() const final {
    return CreateMaybeMessage<EnvSetupRequest>(nullptr);
  }

  EnvSetupRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EnvSetupRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EnvSetupRequest& from);
  void MergeFrom(const EnvSetupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnvSetupRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "warehousesim.EnvSetupRequest";
  }
  protected:
  explicit EnvSetupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_envmessage_2eproto);
    return ::descriptor_table_envmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObsBlocksFieldNumber = 5,
    kRackBlocksFieldNumber = 6,
    kBlockWidthFieldNumber = 1,
    kBlockHeightFieldNumber = 2,
    kProjectIdFieldNumber = 4,
    kScaleFieldNumber = 3,
  };
  // repeated int32 obs_blocks = 5;
  int obs_blocks_size() const;
  private:
  int _internal_obs_blocks_size() const;
  public:
  void clear_obs_blocks();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_obs_blocks(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_obs_blocks() const;
  void _internal_add_obs_blocks(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_obs_blocks();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 obs_blocks(int index) const;
  void set_obs_blocks(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_obs_blocks(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      obs_blocks() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_obs_blocks();

  // repeated int32 rack_blocks = 6;
  int rack_blocks_size() const;
  private:
  int _internal_rack_blocks_size() const;
  public:
  void clear_rack_blocks();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rack_blocks(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_rack_blocks() const;
  void _internal_add_rack_blocks(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_rack_blocks();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 rack_blocks(int index) const;
  void set_rack_blocks(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_rack_blocks(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      rack_blocks() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_rack_blocks();

  // optional int32 block_width = 1;
  bool has_block_width() const;
  private:
  bool _internal_has_block_width() const;
  public:
  void clear_block_width();
  ::PROTOBUF_NAMESPACE_ID::int32 block_width() const;
  void set_block_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_block_width() const;
  void _internal_set_block_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 block_height = 2;
  bool has_block_height() const;
  private:
  bool _internal_has_block_height() const;
  public:
  void clear_block_height();
  ::PROTOBUF_NAMESPACE_ID::int32 block_height() const;
  void set_block_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_block_height() const;
  void _internal_set_block_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 project_id = 4;
  bool has_project_id() const;
  private:
  bool _internal_has_project_id() const;
  public:
  void clear_project_id();
  ::PROTOBUF_NAMESPACE_ID::int64 project_id() const;
  void set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_project_id() const;
  void _internal_set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 scale = 3;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  ::PROTOBUF_NAMESPACE_ID::int32 scale() const;
  void set_scale(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_scale() const;
  void _internal_set_scale(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:warehousesim.EnvSetupRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > obs_blocks_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > rack_blocks_;
  ::PROTOBUF_NAMESPACE_ID::int32 block_width_;
  ::PROTOBUF_NAMESPACE_ID::int32 block_height_;
  ::PROTOBUF_NAMESPACE_ID::int64 project_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 scale_;
  friend struct ::TableStruct_envmessage_2eproto;
};
// -------------------------------------------------------------------

class EnvSetupResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:warehousesim.EnvSetupResponse) */ {
 public:
  inline EnvSetupResponse() : EnvSetupResponse(nullptr) {};
  virtual ~EnvSetupResponse();

  EnvSetupResponse(const EnvSetupResponse& from);
  EnvSetupResponse(EnvSetupResponse&& from) noexcept
    : EnvSetupResponse() {
    *this = ::std::move(from);
  }

  inline EnvSetupResponse& operator=(const EnvSetupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnvSetupResponse& operator=(EnvSetupResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EnvSetupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnvSetupResponse* internal_default_instance() {
    return reinterpret_cast<const EnvSetupResponse*>(
               &_EnvSetupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EnvSetupResponse& a, EnvSetupResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EnvSetupResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnvSetupResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EnvSetupResponse* New() const final {
    return CreateMaybeMessage<EnvSetupResponse>(nullptr);
  }

  EnvSetupResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EnvSetupResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EnvSetupResponse& from);
  void MergeFrom(const EnvSetupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnvSetupResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "warehousesim.EnvSetupResponse";
  }
  protected:
  explicit EnvSetupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_envmessage_2eproto);
    return ::descriptor_table_envmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectIdFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // optional int64 project_id = 2;
  bool has_project_id() const;
  private:
  bool _internal_has_project_id() const;
  public:
  void clear_project_id();
  ::PROTOBUF_NAMESPACE_ID::int64 project_id() const;
  void set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_project_id() const;
  void _internal_set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required .warehousesim.EnvSetupStatus status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::warehousesim::EnvSetupStatus status() const;
  void set_status(::warehousesim::EnvSetupStatus value);
  private:
  ::warehousesim::EnvSetupStatus _internal_status() const;
  void _internal_set_status(::warehousesim::EnvSetupStatus value);
  public:

  // @@protoc_insertion_point(class_scope:warehousesim.EnvSetupResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 project_id_;
  int status_;
  friend struct ::TableStruct_envmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EnvSetupRequest

// optional int32 block_width = 1;
inline bool EnvSetupRequest::_internal_has_block_width() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EnvSetupRequest::has_block_width() const {
  return _internal_has_block_width();
}
inline void EnvSetupRequest::clear_block_width() {
  block_width_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::_internal_block_width() const {
  return block_width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::block_width() const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupRequest.block_width)
  return _internal_block_width();
}
inline void EnvSetupRequest::_internal_set_block_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  block_width_ = value;
}
inline void EnvSetupRequest::set_block_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_block_width(value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupRequest.block_width)
}

// optional int32 block_height = 2;
inline bool EnvSetupRequest::_internal_has_block_height() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EnvSetupRequest::has_block_height() const {
  return _internal_has_block_height();
}
inline void EnvSetupRequest::clear_block_height() {
  block_height_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::_internal_block_height() const {
  return block_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::block_height() const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupRequest.block_height)
  return _internal_block_height();
}
inline void EnvSetupRequest::_internal_set_block_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  block_height_ = value;
}
inline void EnvSetupRequest::set_block_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupRequest.block_height)
}

// optional int32 scale = 3;
inline bool EnvSetupRequest::_internal_has_scale() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool EnvSetupRequest::has_scale() const {
  return _internal_has_scale();
}
inline void EnvSetupRequest::clear_scale() {
  scale_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::_internal_scale() const {
  return scale_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::scale() const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupRequest.scale)
  return _internal_scale();
}
inline void EnvSetupRequest::_internal_set_scale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  scale_ = value;
}
inline void EnvSetupRequest::set_scale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupRequest.scale)
}

// optional int64 project_id = 4;
inline bool EnvSetupRequest::_internal_has_project_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool EnvSetupRequest::has_project_id() const {
  return _internal_has_project_id();
}
inline void EnvSetupRequest::clear_project_id() {
  project_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 EnvSetupRequest::_internal_project_id() const {
  return project_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 EnvSetupRequest::project_id() const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupRequest.project_id)
  return _internal_project_id();
}
inline void EnvSetupRequest::_internal_set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  project_id_ = value;
}
inline void EnvSetupRequest::set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupRequest.project_id)
}

// repeated int32 obs_blocks = 5;
inline int EnvSetupRequest::_internal_obs_blocks_size() const {
  return obs_blocks_.size();
}
inline int EnvSetupRequest::obs_blocks_size() const {
  return _internal_obs_blocks_size();
}
inline void EnvSetupRequest::clear_obs_blocks() {
  obs_blocks_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::_internal_obs_blocks(int index) const {
  return obs_blocks_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::obs_blocks(int index) const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupRequest.obs_blocks)
  return _internal_obs_blocks(index);
}
inline void EnvSetupRequest::set_obs_blocks(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  obs_blocks_.Set(index, value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupRequest.obs_blocks)
}
inline void EnvSetupRequest::_internal_add_obs_blocks(::PROTOBUF_NAMESPACE_ID::int32 value) {
  obs_blocks_.Add(value);
}
inline void EnvSetupRequest::add_obs_blocks(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_obs_blocks(value);
  // @@protoc_insertion_point(field_add:warehousesim.EnvSetupRequest.obs_blocks)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EnvSetupRequest::_internal_obs_blocks() const {
  return obs_blocks_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EnvSetupRequest::obs_blocks() const {
  // @@protoc_insertion_point(field_list:warehousesim.EnvSetupRequest.obs_blocks)
  return _internal_obs_blocks();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EnvSetupRequest::_internal_mutable_obs_blocks() {
  return &obs_blocks_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EnvSetupRequest::mutable_obs_blocks() {
  // @@protoc_insertion_point(field_mutable_list:warehousesim.EnvSetupRequest.obs_blocks)
  return _internal_mutable_obs_blocks();
}

// repeated int32 rack_blocks = 6;
inline int EnvSetupRequest::_internal_rack_blocks_size() const {
  return rack_blocks_.size();
}
inline int EnvSetupRequest::rack_blocks_size() const {
  return _internal_rack_blocks_size();
}
inline void EnvSetupRequest::clear_rack_blocks() {
  rack_blocks_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::_internal_rack_blocks(int index) const {
  return rack_blocks_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnvSetupRequest::rack_blocks(int index) const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupRequest.rack_blocks)
  return _internal_rack_blocks(index);
}
inline void EnvSetupRequest::set_rack_blocks(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  rack_blocks_.Set(index, value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupRequest.rack_blocks)
}
inline void EnvSetupRequest::_internal_add_rack_blocks(::PROTOBUF_NAMESPACE_ID::int32 value) {
  rack_blocks_.Add(value);
}
inline void EnvSetupRequest::add_rack_blocks(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_rack_blocks(value);
  // @@protoc_insertion_point(field_add:warehousesim.EnvSetupRequest.rack_blocks)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EnvSetupRequest::_internal_rack_blocks() const {
  return rack_blocks_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EnvSetupRequest::rack_blocks() const {
  // @@protoc_insertion_point(field_list:warehousesim.EnvSetupRequest.rack_blocks)
  return _internal_rack_blocks();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EnvSetupRequest::_internal_mutable_rack_blocks() {
  return &rack_blocks_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EnvSetupRequest::mutable_rack_blocks() {
  // @@protoc_insertion_point(field_mutable_list:warehousesim.EnvSetupRequest.rack_blocks)
  return _internal_mutable_rack_blocks();
}

// -------------------------------------------------------------------

// EnvSetupResponse

// required .warehousesim.EnvSetupStatus status = 1;
inline bool EnvSetupResponse::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EnvSetupResponse::has_status() const {
  return _internal_has_status();
}
inline void EnvSetupResponse::clear_status() {
  status_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::warehousesim::EnvSetupStatus EnvSetupResponse::_internal_status() const {
  return static_cast< ::warehousesim::EnvSetupStatus >(status_);
}
inline ::warehousesim::EnvSetupStatus EnvSetupResponse::status() const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupResponse.status)
  return _internal_status();
}
inline void EnvSetupResponse::_internal_set_status(::warehousesim::EnvSetupStatus value) {
  assert(::warehousesim::EnvSetupStatus_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  status_ = value;
}
inline void EnvSetupResponse::set_status(::warehousesim::EnvSetupStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupResponse.status)
}

// optional int64 project_id = 2;
inline bool EnvSetupResponse::_internal_has_project_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EnvSetupResponse::has_project_id() const {
  return _internal_has_project_id();
}
inline void EnvSetupResponse::clear_project_id() {
  project_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 EnvSetupResponse::_internal_project_id() const {
  return project_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 EnvSetupResponse::project_id() const {
  // @@protoc_insertion_point(field_get:warehousesim.EnvSetupResponse.project_id)
  return _internal_project_id();
}
inline void EnvSetupResponse::_internal_set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  project_id_ = value;
}
inline void EnvSetupResponse::set_project_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:warehousesim.EnvSetupResponse.project_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace warehousesim

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::warehousesim::EnvSetupRequestType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::warehousesim::EnvSetupRequestType>() {
  return ::warehousesim::EnvSetupRequestType_descriptor();
}
template <> struct is_proto_enum< ::warehousesim::EnvSetupStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::warehousesim::EnvSetupStatus>() {
  return ::warehousesim::EnvSetupStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_envmessage_2eproto
